// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id        String    @id @default(uuid())
    name      String
    createdAt DateTime  @unique @default(now())
    updatedAt DateTime  @unique @default(now())
    deletedAt DateTime? @unique

    gameUser1 Game[] @relation("Game1")
    gameUser2 Game[] @relation("Game2")

    inviteSender   Invite[] @relation("InviteSender")
    inviteReceiver Invite[] @relation("InviteReceiver")
}

model Lobby {
    id        String    @id @default(uuid())
    name      String
    userCount Int       @default(0)
    createdAt DateTime  @unique @default(now())
    updatedAt DateTime  @unique @default(now())
    deletedAt DateTime? @unique
}

model Game {
    id        String    @id
    user1Id   String
    user2Id   String
    createdAt DateTime  @unique @default(now())
    updatedAt DateTime  @unique @default(now())
    deletedAt DateTime? @unique

    user1 User @relation("Game1", fields: [user1Id], references: [id])
    user2 User @relation("Game2", fields: [user2Id], references: [id])

    @@index([user1Id])
    @@index([user2Id])
}

model Invite {
    id         String       @id @default(uuid())
    senderId   String
    receiverId String
    status     InviteStatus @default(PENDING)

    sender   User @relation("InviteSender", fields: [senderId], references: [id])
    receiver User @relation("InviteReceiver", fields: [receiverId], references: [id])

    @@index([senderId])
    @@index([receiverId])
}

enum InviteStatus {
    PENDING  @map("pending")
    ACCEPTED @map("accepted")
    DECLINED @map("declined")
}
